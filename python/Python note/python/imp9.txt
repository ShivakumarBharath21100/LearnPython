Garbage Collector:
import gc
print(gc.isenabled())
gc.disable()
print(gc.isenabled())
gc.enable()
print(gc.isenabled())

Destructor:

import time
class Test:
	def __init__(self):
		print('object initialization')
	def __del__(self):
		print('fulfilling last........')

t1 = Test()
t2 = t1
t3 = t2
del t1
time.sleep(10)
print('objects not yet destroyed, after deleting t1')
del t2
time.sleep(10)
print('objects not yet destroyed, after deleting t2')
del t3
time.sleep(10)
print('objects not yet destroyed, after deleting t3')
Setter Method:
Getter Method:
class Student:
	def setName(self,name):--setter method
		self.name = name 
	def getName(self):--getter method
		return self.name
	def setMarks(self,marks):
		self.marks = marks
	def getMarks(self):
		return self.marks

l=[]
n=int(input('Enter no of students:'))
for i in range(n):
	s = Student()
	name = input('Enter name of student:')
	marks = int(input('Enter marks of student:'))
	s.setName(name)
	s.setMarks(marks)
	l.append(s)

for s in l:
	print('Student name:',s.getName())
	print('Student marks:',s.getMarks())
	print()
Polymorphism:
	Operator Overloading
	Method Overloading
	Constructor Overloading

	Variable Overriding
	Method Overriding
	Constructor Overriding